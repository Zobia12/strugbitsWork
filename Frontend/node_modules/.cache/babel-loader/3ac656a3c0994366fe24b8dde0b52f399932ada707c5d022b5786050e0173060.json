{"ast":null,"code":"var _jsxFileName = \"D:\\\\MYREACTTASK\\\\my_react_test\\\\MyReactTest\\\\Frontend\\\\src\\\\components\\\\propertiesList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PropertyCard from \"./propertiesCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyList = () => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProperties = async () => {\n      try {\n        debugger;\n        const response = await axios.get('http://localhost:5000/api/properties');\n        setProperties(response.data);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to fetch properties\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProperties();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4\",\n    children: properties.map(property => /*#__PURE__*/_jsxDEV(PropertyCard, {\n      property: property\n    }, property.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyList, \"GHOAN7h9Mu6I/LUJAEtJBThJSeQ=\");\n_c = PropertyList;\nexport default PropertyList;\nvar _c;\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"names":["useState","useEffect","axios","PropertyCard","jsxDEV","_jsxDEV","PropertyList","_s","properties","setProperties","loading","setLoading","error","setError","fetchProperties","response","get","data","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","property","id","_c","$RefreshReg$"],"sources":["D:/MYREACTTASK/my_react_test/MyReactTest/Frontend/src/components/propertiesList.jsx"],"sourcesContent":["\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport PropertyCard from \"./propertiesCard\"\r\n\r\nconst PropertyList = () => {\r\n  const [properties, setProperties] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProperties = async () => {\r\n      try {\r\n        debugger\r\n        const response = await axios.get('http://localhost:5000/api/properties')\r\n        \r\n        setProperties(response.data)\r\n        } catch (error) {\r\n        setError(error.response?.data?.error || \"Failed to fetch properties\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProperties();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center text-red-500\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 p-4\">\r\n      {properties.map((property) => (\r\n        <PropertyCard key={property.id} property={property} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyList;\r\n"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,sCAAsC,CAAC;QAExEP,aAAa,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOL,KAAK,EAAE;QAAA,IAAAM,eAAA,EAAAC,oBAAA;QAChBN,QAAQ,CAAC,EAAAK,eAAA,GAAAN,KAAK,CAACG,QAAQ,cAAAG,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBP,KAAK,KAAI,4BAA4B,CAAC;MACvE,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtD;EAEA,IAAIb,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAKe,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAET;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAChE;EAEA,oBACEpB,OAAA;IAAKe,SAAS,EAAC,6DAA6D;IAAAC,QAAA,EACzEb,UAAU,CAACkB,GAAG,CAAEC,QAAQ,iBACvBtB,OAAA,CAACF,YAAY;MAAmBwB,QAAQ,EAAEA;IAAS,GAAhCA,QAAQ,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCID,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}